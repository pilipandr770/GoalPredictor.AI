"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É users
"""
import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –î–æ–±–∞–≤–∏—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(__file__))

from app import create_app
from extensions import db

def update_database_schema():
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    app = create_app()
    
    with app.app_context():
        print("=" * 60)
        print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö GoalPredictor.AI")
        print("=" * 60)
        print()
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ is_premium
            result = db.session.execute(db.text("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_schema = 'goalpredictor' 
                AND table_name = 'users' 
                AND column_name = 'is_premium'
            """))
            
            if result.fetchone() is None:
                print("üìù –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É is_premium...")
                db.session.execute(db.text("""
                    ALTER TABLE goalpredictor.users 
                    ADD COLUMN is_premium BOOLEAN DEFAULT FALSE
                """))
                db.session.commit()
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ is_premium –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ is_premium —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            print()
            print("=" * 60)
            print("‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            print("=" * 60)
            
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã: {e}")
            import traceback
            traceback.print_exc()

if __name__ == '__main__':
    update_database_schema()
