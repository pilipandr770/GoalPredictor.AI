"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–∞—Ç—á–∏
"""
from extensions import db
from app import create_app
from models import Match, Prediction
from ml.predict import PredictionService
from datetime import datetime

app = create_app()
prediction_service = PredictionService()

with app.app_context():
    print("=" * 60)
    print("–ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–†–û–ì–ù–û–ó–û–í")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–∞—Ç—á–∏ –±–µ–∑ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
    matches_without_predictions = Match.query.filter(
        ~Match.predictions.any()
    ).limit(10).all()  # –û–≥—Ä–∞–Ω–∏—á–∏–º –ø–µ—Ä–≤—ã–º–∏ 10 –¥–ª—è —Ç–µ—Å—Ç–∞
    
    if not matches_without_predictions:
        print("\n‚ö†Ô∏è –í—Å–µ –º–∞—Ç—á–∏ —É–∂–µ –∏–º–µ—é—Ç –ø—Ä–æ–≥–Ω–æ–∑—ã –∏–ª–∏ –Ω–µ—Ç –º–∞—Ç—á–µ–π –≤ –±–∞–∑–µ!")
    else:
        print(f"\nüîÆ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –¥–ª—è {len(matches_without_predictions)} –º–∞—Ç—á–µ–π...")
        
        generated = 0
        errors = 0
        
        for match in matches_without_predictions:
            try:
                home = match.home_team.name if match.home_team else "?"
                away = match.away_team.name if match.away_team else "?"
                
                print(f"\n   –ú–∞—Ç—á: {home} vs {away}")
                
                # –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
                match_data = {
                    'home_team_id': match.home_team_id,
                    'away_team_id': match.away_team_id,
                    'home_team_name': home,
                    'away_team_name': away,
                    'league': match.league,
                    'date': match.match_date
                }
                
                # –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑
                prediction_data = prediction_service.predict_match(
                    match_data,
                    include_explanation=False  # –ë–µ–∑ AI –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
                )
                
                # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î
                prediction = Prediction(
                    match_id=match.id,
                    probability=prediction_data.get('probability', 50.0),
                    confidence=prediction_data.get('confidence', 50.0),
                    explanation=prediction_data.get('explanation'),
                    factors=str(prediction_data.get('features', {})),
                    model_version=prediction_data.get('model_version', 'unknown')
                )
                
                db.session.add(prediction)
                db.session.commit()
                
                print(f"   ‚úÖ –ü—Ä–æ–≥–Ω–æ–∑: {prediction.probability}% (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {prediction.confidence}%)")
                generated += 1
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                errors += 1
                db.session.rollback()
        
        print(f"\n{'=' * 60}")
        print(f"‚úÖ –ü—Ä–æ–≥–Ω–æ–∑–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {generated}")
        if errors > 0:
            print(f"‚ùå –û—à–∏–±–æ–∫: {errors}")
        print(f"{'=' * 60}")
