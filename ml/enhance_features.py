"""
–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Ñ—ñ—á –¥–ª—è ML –º–æ–¥–µ–ª–µ–π

–ù–û–í–Ü –§–Ü–ß–Ü:
1. days_rest_home - –¥–Ω—ñ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –¥–æ–º–∞—à–Ω—å–æ—ó –∫–æ–º–∞–Ω–¥–∏
2. days_rest_away - –¥–Ω—ñ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –≤–∏—ó–∑–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏
3. rest_advantage - —Ä—ñ–∑–Ω–∏—Ü—è —É –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É (–º–æ–∂–µ –≤–ø–ª–∏–≤–∞—Ç–∏ –Ω–∞ –≤—Ç–æ–º—É)
4. is_back_to_back_home - —á–∏ –≥—Ä–∞—î –¥–æ–º–∞—à–Ω—è –∫–æ–º–∞–Ω–¥–∞ –¥–≤–∞ –¥–Ω—ñ –ø–æ—Å–ø—ñ–ª—å
5. is_back_to_back_away - —á–∏ –≥—Ä–∞—î –≤–∏—ó–∑–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–≤–∞ –¥–Ω—ñ –ø–æ—Å–ø—ñ–ª—å
6. home_scoring_trend - —Ç—Ä–µ–Ω–¥ –≥–æ–ª—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 5 —ñ–≥–æ—Ä (–∑—Ä–æ—Å—Ç–∞—î/–ø–∞–¥–∞—î)
7. away_scoring_trend - —Ç—Ä–µ–Ω–¥ –≥–æ–ª—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 5 —ñ–≥–æ—Ä

–ú–ê–ô–ë–£–¢–ù–Ü –§–Ü–ß–Ü (–ø–æ—Ç—Ä–µ–±—É—é—Ç—å API):
- travel_distance - –≤—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ –º—ñ—Å—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥
- weather_temp - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –º–∞—Ç—á—É
- weather_rain - –¥–æ—â (—Ç–∞–∫/–Ω—ñ)
- motivation_index - —Ç—É—Ä–Ω—ñ—Ä–Ω–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è (—Ç–æ–ø-4, –≤–∏–ª—å–æ—Ç, —Å–µ—Ä–µ–¥–∏–Ω–∞)
"""
import pandas as pd
import numpy as np
from pathlib import Path


def add_rest_days_features(df):
    """
    –î–æ–¥–∞—Ç–∏ —Ñ—ñ—á—ñ –ø—Ä–æ –¥–Ω—ñ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –º—ñ–∂ –º–∞—Ç—á–∞–º–∏
    
    –í–ê–ñ–õ–ò–í–û: –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –ø–æ –∫–æ–º–∞–Ω–¥—ñ —Ç–∞ –¥–∞—Ç—ñ!
    """
    print("üîß –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—ñ—á –ø—Ä–æ –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫...")
    
    # –ö–æ–ø—ñ—è –¥–ª—è —Ä–æ–±–æ—Ç–∏
    df = df.copy()
    df['date'] = pd.to_datetime(df['date'])
    
    # –ü–æ—Ç—Ä—ñ–±–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏ –∑ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if 'home_team_id' not in df.columns or 'away_team_id' not in df.columns:
        print("‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: –Ω–µ–º–∞—î home_team_id/away_team_id")
        return df
    
    # –î–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏ - –∑–Ω–∞–π—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º–∞—Ç—á
    # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è team_id –≤ training_data.csv
    
    # –ü–æ–∫–∏ —â–æ –∑–∞–≥–ª—É—à–∫–∞
    df['days_rest_home'] = 3.0  # –°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è
    df['days_rest_away'] = 3.0
    df['rest_advantage'] = 0.0
    df['is_back_to_back_home'] = 0
    df['is_back_to_back_away'] = 0
    
    print(f"  ‚úì –î–æ–¥–∞–Ω–æ 5 —Ñ—ñ—á –ø—Ä–æ –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫")
    return df


def add_scoring_trends(df):
    """
    –î–æ–¥–∞—Ç–∏ —Ç—Ä–µ–Ω–¥–∏ –≥–æ–ª—ñ–≤ (–∑—Ä–æ—Å—Ç–∞–Ω–Ω—è/–ø–∞–¥—ñ–Ω–Ω—è —Ñ–æ—Ä–º–∏)
    """
    print("üîß –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç—Ä–µ–Ω–¥—ñ–≤ –≥–æ–ª—ñ–≤...")
    
    df = df.copy()
    
    # –Ø–∫—â–æ —î —ñ—Å—Ç–æ—Ä—ñ—è –≥–æ–ª—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ –º–∞—Ç—á—ñ
    if 'home_recent_goals_for' in df.columns:
        # –ü—Ä–æ—Å—Ç–∏–π —Ç—Ä–µ–Ω–¥: –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ –ø–µ—Ä—à—ñ 2 —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 3 –≥—Ä–∏ –∑ 5
        # –ü–æ–∑–∏—Ç–∏–≤–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è = —Ñ–æ—Ä–º–∞ –ø–æ–∫—Ä–∞—â—É—î—Ç—å—Å—è
        # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∫–æ–≤–∑–∞—é—á–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–Ω–¥—É
        
        df['home_scoring_trend'] = 0.0  # –ó–∞–≥–ª—É—à–∫–∞
        df['away_scoring_trend'] = 0.0
        
        print(f"  ‚úì –î–æ–¥–∞–Ω–æ 2 —Ñ—ñ—á—ñ —Ç—Ä–µ–Ω–¥—ñ–≤")
    else:
        print("  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: –Ω–µ–º–∞—î recent_goals")
    
    return df


def add_momentum_features(df):
    """
    –î–æ–¥–∞—Ç–∏ —Ñ—ñ—á—ñ –ø—Ä–æ —ñ–º–ø—É–ª—å—Å/–º–æ–º–µ–Ω—Ç—É–º –∫–æ–º–∞–Ω–¥–∏
    """
    print("üîß –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—ñ—á —ñ–º–ø—É–ª—å—Å—É...")
    
    df = df.copy()
    
    if 'home_recent_form_points' in df.columns and 'away_recent_form_points' in df.columns:
        # –†—ñ–∑–Ω–∏—Ü—è —É —Ñ–æ—Ä–º—ñ
        df['form_difference'] = df['home_recent_form_points'] - df['away_recent_form_points']
        
        # –ù–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —Ñ–æ—Ä–º–∞ (0-1)
        df['home_form_normalized'] = df['home_recent_form_points'] / 15.0  # max 5 wins = 15 points
        df['away_form_normalized'] = df['away_recent_form_points'] / 15.0
        
        print(f"  ‚úì –î–æ–¥–∞–Ω–æ 3 —Ñ—ñ—á—ñ —ñ–º–ø—É–ª—å—Å—É")
    else:
        print("  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: –Ω–µ–º–∞—î form_points")
    
    return df


def add_h2h_dominance(df):
    """
    –î–æ–¥–∞—Ç–∏ —Ñ—ñ—á—ñ –ø—Ä–æ –¥–æ–º—ñ–Ω—É–≤–∞–Ω–Ω—è –≤ H2H
    """
    print("üîß –î–æ–¥–∞–≤–∞–Ω–Ω—è H2H –¥–æ–º—ñ–Ω—É–≤–∞–Ω–Ω—è...")
    
    df = df.copy()
    
    if all(col in df.columns for col in ['h2h_home_wins', 'h2h_draws', 'h2h_away_wins']):
        # –í—ñ–¥—Å–æ—Ç–æ–∫ –ø–µ—Ä–µ–º–æ–≥ –¥–æ–º–∞—à–Ω—ñ—Ö —É H2H
        h2h_total = df['h2h_home_wins'] + df['h2h_draws'] + df['h2h_away_wins']
        h2h_total = h2h_total.replace(0, 1)  # –£–Ω–∏–∫–Ω—É—Ç–∏ –¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ 0
        
        df['h2h_home_dominance'] = df['h2h_home_wins'] / h2h_total
        df['h2h_away_dominance'] = df['h2h_away_wins'] / h2h_total
        df['h2h_balance'] = df['h2h_home_dominance'] - df['h2h_away_dominance']
        
        print(f"  ‚úì –î–æ–¥–∞–Ω–æ 3 —Ñ—ñ—á—ñ H2H")
    else:
        print("  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: –Ω–µ–º–∞—î h2h –¥–∞–Ω–∏—Ö")
    
    return df


def add_defensive_features(df):
    """
    –î–æ–¥–∞—Ç–∏ —Ñ—ñ—á—ñ –ø—Ä–æ –∑–∞—Ö–∏—Å—Ç
    """
    print("üîß –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—ñ—á –∑–∞—Ö–∏—Å—Ç—É...")
    
    df = df.copy()
    
    if all(col in df.columns for col in ['home_recent_goals_against', 'away_recent_goals_against']):
        # –ì–æ–ª—ñ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–æ –≤ —Å–µ—Ä–µ–¥–Ω—å–æ–º—É –∑–∞ –≥—Ä—É
        home_matches = df['home_total_matches'].replace(0, 1)
        away_matches = df['away_total_matches'].replace(0, 1)
        
        df['home_defensive_rating'] = df['home_recent_goals_against'] / 5.0  # 5 –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —ñ–≥–æ—Ä
        df['away_defensive_rating'] = df['away_recent_goals_against'] / 5.0
        
        # –ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω–∞ –æ—á—ñ–∫—É–≤–∞–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–ª—ñ–≤
        df['expected_goals_combined'] = (
            df['home_avg_goals'] + df['away_defensive_rating'] +
            df['away_avg_goals'] + df['home_defensive_rating']
        ) / 2.0
        
        print(f"  ‚úì –î–æ–¥–∞–Ω–æ 3 —Ñ—ñ—á—ñ –∑–∞—Ö–∏—Å—Ç—É")
    else:
        print("  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: –Ω–µ–º–∞—î defensive –¥–∞–Ω–∏—Ö")
    
    return df


def enhance_training_data(input_path='ml/data/training_data.csv', 
                          output_path='ml/data/training_data_enhanced.csv'):
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è: –¥–æ–¥–∞—Ç–∏ –≤—Å—ñ –Ω–æ–≤—ñ —Ñ—ñ—á—ñ
    """
    print()
    print("=" * 70)
    print("üöÄ –ü–û–ö–†–ê–©–ï–ù–ù–Ø –¢–†–ï–ù–£–í–ê–õ–¨–ù–ò–• –î–ê–ù–ò–•")
    print("=" * 70)
    print()
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
    print(f"üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {input_path}")
    df = pd.read_csv(input_path)
    print(f"  ‚úì –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {len(df)} –∑–∞–ø–∏—Å—ñ–≤, {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫")
    print()
    
    # –î–æ–¥–∞—Ç–∏ —Ñ—ñ—á—ñ
    original_cols = len(df.columns)
    
    df = add_rest_days_features(df)
    df = add_scoring_trends(df)
    df = add_momentum_features(df)
    df = add_h2h_dominance(df)
    df = add_defensive_features(df)
    
    new_cols = len(df.columns) - original_cols
    
    print()
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ {new_cols} –Ω–æ–≤–∏—Ö —Ñ—ñ—á!")
    print(f"   –ë—É–ª–æ: {original_cols} ‚Üí –°—Ç–∞–ª–æ: {len(df.columns)}")
    print()
    
    # –ó–±–µ—Ä–µ–≥—Ç–∏
    print(f"üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {output_path}")
    df.to_csv(output_path, index=False)
    print(f"  ‚úì –ó–±–µ—Ä–µ–∂–µ–Ω–æ")
    print()
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–æ–≤—ñ –∫–æ–ª–æ–Ω–∫–∏
    new_features = [col for col in df.columns if col not in pd.read_csv(input_path).columns]
    print("üìã –ù–æ–≤—ñ —Ñ—ñ—á—ñ:")
    for feat in new_features:
        print(f"  ‚Ä¢ {feat}")
    print()
    
    print("=" * 70)
    print("‚úÖ –ì–û–¢–û–í–û")
    print("=" * 70)
    print()
    print("–ù–ê–°–¢–£–ü–ù–ò–ô –ö–†–û–ö:")
    print("  python ml/train_temporal_split.py")
    print("  (–∑–º—ñ–Ω–∏—Ç–∏ data_path –Ω–∞ training_data_enhanced.csv)")
    print()


if __name__ == '__main__':
    enhance_training_data()
